on:
  pull_request:
  push:
    branches:
      - master

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: jekyll-contained

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials-for-github-actions@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login-for-github-actions@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_IMAGE: "${{ steps.login-ecr.outputs.registry }}:${{ env.ECR_REPOSITORY}}/${{ github.sha }}"
      run: |
        # Build a container and push it to ECR
        docker build -t $ECR_IMAGE .
        docker push $ECR_IMAGE
        echo "::set-output name=image::$ECR_IMAGE"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition-for-github-actions@v1
      with:
        task-definition: .aws/task-definition.json
        container-name: jekyll-contained
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition-for-github-actions@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: jekyll-contained
        cluster: jekyll-contained
        wait-for-service-stability: true
